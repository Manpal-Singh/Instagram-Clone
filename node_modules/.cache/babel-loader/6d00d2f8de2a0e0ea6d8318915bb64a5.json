{"ast":null,"code":"var _jsxFileName = \"/home/mannu/Desktop/Project/Reactjs Project/instagram-clone/src/component/Post/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"../../firebase\";\nimport firebase from \"firebase\";\n\nfunction Post({\n  user,\n  postId,\n  username,\n  caption,\n  imageUrl\n}) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\"); // useEffect--> run a piece of code based on condtion and run every time whe condition change\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post-avatar\",\n    src: imageUrl,\n    alt: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post-image\",\n    src: imageUrl,\n    alt: \"avtar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, comments.map((comment, id) => /*#__PURE__*/React.createElement(\"p\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, comment.username), comment.text))), user && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post-comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post-input\",\n    type: \"text\",\n    placeholder: \"add a comment...\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post-button\",\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Post\")));\n}\n\nexport default Post;","map":{"version":3,"sources":["/home/mannu/Desktop/Project/Reactjs Project/instagram-clone/src/component/Post/Post.js"],"names":["React","useState","useEffect","Avatar","db","firebase","Post","user","postId","username","caption","imageUrl","comments","setComments","comment","setComment","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","postComment","event","preventDefault","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp","id","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"../../firebase\";\n\nimport firebase from \"firebase\";\n\nfunction Post({ user, postId, username, caption, imageUrl }) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n\n  // useEffect--> run a piece of code based on condtion and run every time whe condition change\n  useEffect(() => {\n    let unsubscribe;\n    if (postId) {\n      unsubscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = (event) => {\n    event.preventDefault();\n\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setComment(\"\");\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"post-header\">\n        <Avatar className=\"post-avatar\" src={imageUrl} alt={username} />\n        <h3>{username}</h3>\n      </div>\n      <img className=\"post-image\" src={imageUrl} alt=\"avtar\" />\n\n      <div className=\"post-comments\">\n        {comments.map((comment, id) => (\n          <p key = {id}>\n            <strong>{comment.username}</strong>\n            {comment.text}\n          </p>\n        ))}\n      </div>\n\n     {user && (\n        <form className=\"post-comment-box\">\n          <input\n            className=\"post-input\"\n            type=\"text\"\n            placeholder=\"add a comment...\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          <button\n            className=\"post-button\"\n            disabled={!comment}\n            type=\"submit\"\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n     )}\n    </div>\n  );\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}