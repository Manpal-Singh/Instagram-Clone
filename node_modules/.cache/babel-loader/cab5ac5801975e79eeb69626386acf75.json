{"ast":null,"code":"import _slicedToArray from\"/home/mannu/Desktop/Project/Reactjs Project/instagram-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./Post.css\";import Avatar from\"@material-ui/core/Avatar\";import{db}from\"../../firebase\";import firebase from\"firebase\";function Post(_ref){var user=_ref.user,postId=_ref.postId,username=_ref.username,caption=_ref.caption,imageUrl=_ref.imageUrl;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),comments=_useState2[0],setComments=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),comment=_useState4[0],setComment=_useState4[1];// useEffect--> run a piece of code based on condtion and run every time whe condition change\nuseEffect(function(){var unsubscribe;if(postId){unsubscribe=db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy(\"timestamp\",\"desc\").onSnapshot(function(snapshot){setComments(snapshot.docs.map(function(doc){return doc.data();}));});}return function(){unsubscribe();};},[postId]);var postComment=function postComment(event){event.preventDefault();db.collection(\"posts\").doc(postId).collection(\"comments\").add({text:comment,username:user.displayName,timestamp:firebase.firestore.FieldValue.serverTimestamp()});setComment(\"\");};return/*#__PURE__*/React.createElement(\"div\",{className:\"post\"},/*#__PURE__*/React.createElement(\"div\",{className:\"post-header\"},/*#__PURE__*/React.createElement(Avatar,{className:\"post-avatar\",src:imageUrl,alt:username}),/*#__PURE__*/React.createElement(\"h3\",null,username)),/*#__PURE__*/React.createElement(\"img\",{className:\"post-image\",src:imageUrl,alt:\"avtar\"}),/*#__PURE__*/React.createElement(\"h4\",{className:\"post-text\"},/*#__PURE__*/React.createElement(\"strong\",null,username),caption),/*#__PURE__*/React.createElement(\"div\",{className:\"post-comments\"},comments.map(function(comment,id){return/*#__PURE__*/React.createElement(\"p\",{key:id},/*#__PURE__*/React.createElement(\"strong\",null,comment.username),comment.text);})),user&&/*#__PURE__*/React.createElement(\"form\",{className:\"post-comment-box\"},/*#__PURE__*/React.createElement(\"input\",{className:\"post-input\",type:\"text\",placeholder:\"add a comment...\",value:comment,onChange:function onChange(e){return setComment(e.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{className:\"post-button\",disabled:!comment,type:\"submit\",onClick:postComment},\"Post\")));}export default Post;","map":{"version":3,"sources":["/home/mannu/Desktop/Project/Reactjs Project/instagram-clone/src/component/Post/Post.js"],"names":["React","useState","useEffect","Avatar","db","firebase","Post","user","postId","username","caption","imageUrl","comments","setComments","comment","setComment","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","postComment","event","preventDefault","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp","id","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"../../firebase\";\n\nimport firebase from \"firebase\";\n\nfunction Post({ user, postId, username, caption, imageUrl }) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n\n  // useEffect--> run a piece of code based on condtion and run every time whe condition change\n  useEffect(() => {\n    let unsubscribe;\n    if (postId) {\n      unsubscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = (event) => {\n    event.preventDefault();\n\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setComment(\"\");\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"post-header\">\n        <Avatar className=\"post-avatar\" src={imageUrl} alt={username} />\n        <h3>{username}</h3>\n      </div>\n      <img className=\"post-image\" src={imageUrl} alt=\"avtar\" />\n\n      <h4 className=\"post-text\">\n        <strong>{username}</strong>\n        {caption}\n      </h4>\n\n      <div className=\"post-comments\">\n        {comments.map((comment, id) => (\n          <p key={id}>\n            <strong>{comment.username}</strong>\n            {comment.text}\n          </p>\n        ))}\n      </div>\n\n      {user && (\n        <form className=\"post-comment-box\">\n          <input\n            className=\"post-input\"\n            type=\"text\"\n            placeholder=\"add a comment...\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          <button\n            className=\"post-button\"\n            disabled={!comment}\n            type=\"submit\"\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}